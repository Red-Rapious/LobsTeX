use std::str::FromStr;
use crate::ast::{Document, DocumentInformation, Block, RichString}; // (0)

grammar;

Text: String = {
    <s:r"[\w| |0-9|,|.|;|/|?|!|+|=]+"> => s.to_string()
}

Info: DocumentInformation = {
    // TODO: choose whether throw error when defined twice
    "\\date{" <s:Text> "}" <mut i:Info> => {
        i.date = Some(s) ; i
    },
    "\\title{" <s:Text> "}" <mut i:Info> => {
        i.title = Some(s) ; i
    },
    "\\author{" <s:Text> "}" <mut i:Info> => {
        i.author = Some(s) ; i
    },
    "\\begin{document}" => DocumentInformation::default()
}

Body: Vec<Block> = {
    "\\section{" <t:Text> "}" <mut b: Body> => { b.push(Block::SectionHeader(vec![RichString::standard(t)])); b },
    "\\subsection{" <t:Text> "}" <mut b: Body> => { b.push(Block::SubsectionHeader(vec![RichString::standard(t)])); b },
    <t:Text> <mut b: Body> => { b.push(Block::Paragraph(vec![RichString::standard(t)])); b },
    "\\maketitle" <mut b: Body> => { b.push(Block::MakeTitle); b },
    "\\newpage" <mut b: Body> => { b.push(Block::NewPage); b },
    "\\end{document}" => vec![]
}

pub Document: Document = {
    "\\documentclass{article}" <info:Info> <mut body:Body> => {
        body.reverse();
        Document { info, body }
    }
}